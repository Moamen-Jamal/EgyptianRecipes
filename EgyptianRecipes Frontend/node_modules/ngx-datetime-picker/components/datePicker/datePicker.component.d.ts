import { OnInit, EventEmitter, ElementRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { IsMobileService } from '../../services/isMobile.service';
import { DateService } from '../../services/date.service';
import { StyleObject } from '../../models/styleObject.model';
import { Renderer } from '../../services/renderer.service';
import * as ɵngcc0 from '@angular/core';
export declare class DatePickerComponent implements OnInit, ControlValueAccessor {
    private isMobileService;
    private dateService;
    private eRef;
    private renderer;
    selectedDate: Date;
    min: string;
    max: string;
    placeholder: string;
    inputTabIndex: number;
    disableInput: boolean;
    disableButton: boolean;
    disablePicker: boolean;
    doNotCloseOnDateSet: boolean;
    styles: StyleObject;
    selectedDateChange: EventEmitter<Date>;
    input: ElementRef;
    offClick(event: any): void;
    pickerVisible: boolean;
    isMobile: boolean;
    invalid: boolean;
    readonly formattedDate: string;
    readonly mobileFormattedDate: string;
    constructor(isMobileService: IsMobileService, dateService: DateService, eRef: ElementRef, renderer: Renderer);
    writeValue(value: Date): void;
    registerOnChange(handler: any): void;
    registerOnTouched(): void;
    setDate(date: string): void;
    ngOnInit(): void;
    newDatePicked(date: Date): void;
    setPickerVisible(close: boolean): void;
    focus(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DatePickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DatePickerComponent, "ngx-date-picker", never, { "disableInput": "disableInput"; "disableButton": "disableButton"; "disablePicker": "disablePicker"; "doNotCloseOnDateSet": "doNotCloseOnDateSet"; "styles": "styles"; "placeholder": "placeholder"; "selectedDate": "selectedDate"; "min": "min"; "max": "max"; "inputTabIndex": "inputTabIndex"; }, { "selectedDateChange": "selectedDateChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZVBpY2tlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiZGF0ZVBpY2tlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQsIEV2ZW50RW1pdHRlciwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBJc01vYmlsZVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9pc01vYmlsZS5zZXJ2aWNlJztcbmltcG9ydCB7IERhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvZGF0ZS5zZXJ2aWNlJztcbmltcG9ydCB7IFN0eWxlT2JqZWN0IH0gZnJvbSAnLi4vLi4vbW9kZWxzL3N0eWxlT2JqZWN0Lm1vZGVsJztcbmltcG9ydCB7IFJlbmRlcmVyIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvcmVuZGVyZXIuc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRlUGlja2VyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gICAgcHJpdmF0ZSBpc01vYmlsZVNlcnZpY2U7XG4gICAgcHJpdmF0ZSBkYXRlU2VydmljZTtcbiAgICBwcml2YXRlIGVSZWY7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBzZWxlY3RlZERhdGU6IERhdGU7XG4gICAgbWluOiBzdHJpbmc7XG4gICAgbWF4OiBzdHJpbmc7XG4gICAgcGxhY2Vob2xkZXI6IHN0cmluZztcbiAgICBpbnB1dFRhYkluZGV4OiBudW1iZXI7XG4gICAgZGlzYWJsZUlucHV0OiBib29sZWFuO1xuICAgIGRpc2FibGVCdXR0b246IGJvb2xlYW47XG4gICAgZGlzYWJsZVBpY2tlcjogYm9vbGVhbjtcbiAgICBkb05vdENsb3NlT25EYXRlU2V0OiBib29sZWFuO1xuICAgIHN0eWxlczogU3R5bGVPYmplY3Q7XG4gICAgc2VsZWN0ZWREYXRlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8RGF0ZT47XG4gICAgaW5wdXQ6IEVsZW1lbnRSZWY7XG4gICAgb2ZmQ2xpY2soZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgcGlja2VyVmlzaWJsZTogYm9vbGVhbjtcbiAgICBpc01vYmlsZTogYm9vbGVhbjtcbiAgICBpbnZhbGlkOiBib29sZWFuO1xuICAgIHJlYWRvbmx5IGZvcm1hdHRlZERhdGU6IHN0cmluZztcbiAgICByZWFkb25seSBtb2JpbGVGb3JtYXR0ZWREYXRlOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoaXNNb2JpbGVTZXJ2aWNlOiBJc01vYmlsZVNlcnZpY2UsIGRhdGVTZXJ2aWNlOiBEYXRlU2VydmljZSwgZVJlZjogRWxlbWVudFJlZiwgcmVuZGVyZXI6IFJlbmRlcmVyKTtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBEYXRlKTogdm9pZDtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGhhbmRsZXI6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoKTogdm9pZDtcbiAgICBzZXREYXRlKGRhdGU6IHN0cmluZyk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZXdEYXRlUGlja2VkKGRhdGU6IERhdGUpOiB2b2lkO1xuICAgIHNldFBpY2tlclZpc2libGUoY2xvc2U6IGJvb2xlYW4pOiB2b2lkO1xuICAgIGZvY3VzKCk6IHZvaWQ7XG59XG4iXX0=