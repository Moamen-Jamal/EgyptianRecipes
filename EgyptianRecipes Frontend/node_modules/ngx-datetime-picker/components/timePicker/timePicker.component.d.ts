import { EventEmitter, ElementRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { IsMobileService } from '../../services/isMobile.service';
import { DateService } from '../../services/date.service';
import { StyleObject } from '../../models/styleObject.model';
import * as ɵngcc0 from '@angular/core';
export declare class TimePickerComponent implements ControlValueAccessor {
    private isMobileService;
    private dateService;
    private eRef;
    selectedTime: string;
    placeholder: string;
    disableInput: boolean;
    disableButton: boolean;
    disablePicker: boolean;
    doNotCloseOnDateSet: boolean;
    styles: StyleObject;
    use24HourClock: boolean;
    selectedTimeChange: EventEmitter<string>;
    offClick(event: any): void;
    pickerVisible: boolean;
    isMobile: boolean;
    readonly formattedTime: string;
    mobileFormattedTime: string;
    selectedHour: number;
    selectedMinute: number;
    constructor(isMobileService: IsMobileService, dateService: DateService, eRef: ElementRef);
    writeValue(value: string): void;
    registerOnChange(handler: any): void;
    registerOnTouched(): void;
    setMobileFormattedTime(time: string): void;
    setFormattedTime(formattedTime: string): void;
    setHourNow(hour: any): void;
    setMinuteNow(minute: any): void;
    setPickerVisible(close: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TimePickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TimePickerComponent, "ngx-time-picker", never, { "disableInput": "disableInput"; "disableButton": "disableButton"; "disablePicker": "disablePicker"; "doNotCloseOnDateSet": "doNotCloseOnDateSet"; "styles": "styles"; "use24HourClock": "use24HourClock"; "placeholder": "placeholder"; "selectedTime": "selectedTime"; }, { "selectedTimeChange": "selectedTimeChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZVBpY2tlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidGltZVBpY2tlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBFbGVtZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IElzTW9iaWxlU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2lzTW9iaWxlLnNlcnZpY2UnO1xuaW1wb3J0IHsgRGF0ZVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9kYXRlLnNlcnZpY2UnO1xuaW1wb3J0IHsgU3R5bGVPYmplY3QgfSBmcm9tICcuLi8uLi9tb2RlbHMvc3R5bGVPYmplY3QubW9kZWwnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVGltZVBpY2tlckNvbXBvbmVudCBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgICBwcml2YXRlIGlzTW9iaWxlU2VydmljZTtcbiAgICBwcml2YXRlIGRhdGVTZXJ2aWNlO1xuICAgIHByaXZhdGUgZVJlZjtcbiAgICBzZWxlY3RlZFRpbWU6IHN0cmluZztcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xuICAgIGRpc2FibGVJbnB1dDogYm9vbGVhbjtcbiAgICBkaXNhYmxlQnV0dG9uOiBib29sZWFuO1xuICAgIGRpc2FibGVQaWNrZXI6IGJvb2xlYW47XG4gICAgZG9Ob3RDbG9zZU9uRGF0ZVNldDogYm9vbGVhbjtcbiAgICBzdHlsZXM6IFN0eWxlT2JqZWN0O1xuICAgIHVzZTI0SG91ckNsb2NrOiBib29sZWFuO1xuICAgIHNlbGVjdGVkVGltZUNoYW5nZTogRXZlbnRFbWl0dGVyPHN0cmluZz47XG4gICAgb2ZmQ2xpY2soZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgcGlja2VyVmlzaWJsZTogYm9vbGVhbjtcbiAgICBpc01vYmlsZTogYm9vbGVhbjtcbiAgICByZWFkb25seSBmb3JtYXR0ZWRUaW1lOiBzdHJpbmc7XG4gICAgbW9iaWxlRm9ybWF0dGVkVGltZTogc3RyaW5nO1xuICAgIHNlbGVjdGVkSG91cjogbnVtYmVyO1xuICAgIHNlbGVjdGVkTWludXRlOiBudW1iZXI7XG4gICAgY29uc3RydWN0b3IoaXNNb2JpbGVTZXJ2aWNlOiBJc01vYmlsZVNlcnZpY2UsIGRhdGVTZXJ2aWNlOiBEYXRlU2VydmljZSwgZVJlZjogRWxlbWVudFJlZik7XG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogc3RyaW5nKTogdm9pZDtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGhhbmRsZXI6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPblRvdWNoZWQoKTogdm9pZDtcbiAgICBzZXRNb2JpbGVGb3JtYXR0ZWRUaW1lKHRpbWU6IHN0cmluZyk6IHZvaWQ7XG4gICAgc2V0Rm9ybWF0dGVkVGltZShmb3JtYXR0ZWRUaW1lOiBzdHJpbmcpOiB2b2lkO1xuICAgIHNldEhvdXJOb3coaG91cjogYW55KTogdm9pZDtcbiAgICBzZXRNaW51dGVOb3cobWludXRlOiBhbnkpOiB2b2lkO1xuICAgIHNldFBpY2tlclZpc2libGUoY2xvc2U6IGJvb2xlYW4pOiB2b2lkO1xufVxuIl19